/*
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//
//Name: Challenge VII
//Author: Nouh Anies(Nouh.Anies@Revature.net)
//Created Date: 7/9/2021
//Description: Step 1: There should be a Vehicle super class, and at least one interface such as 'Bus', or 'Ship' 
//                     representing a classification of vehicles. The vehicle should contain states that track the 
//                     number of vehicles, speed, and an enum declaring the mode of transport (AIR, WATER, or LAND.) 
//                     as well as movement and stopping methods. The interface should contain abstract methods pertaining 
//                     to that vehicle class.
//                     
//             Step 2: Finally you should make a class that extends the vehicle and implements the interface that provides 
//                     its own implementations, as well as demonstrating overriding, overloading, constructor chaining, and 
//                     the this and super keywords. Endeavor to prevent redundant code, and ensure that invalid values cannot 
//                     be passed to states like speed. 
//            
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
*/            
public abstract class Vehicle {
    static integer numOfVehicles = 0;
    public integer speed = 0;
    
    public enum Transport {
        WATER, AIR, LAND
    }
    
    public Vehicle() {
        numOfVehicles ++;
    }
    
    public abstract void drive(integer speed);
    
    public virtual void stop() {
        speed = 0;
    }
      
}